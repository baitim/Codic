# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'client.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QUrl, QFileInfo
from PyQt5.QtMultimedia import QMediaPlayer, QMediaContent
from PyQt5.QtMultimediaWidgets import QVideoWidget


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 800)
        MainWindow.setStyleSheet("background-color: rgb(94, 92, 100);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 600, 800))
        self.tabWidget.setStyleSheet("background-color: rgb(119, 118, 123);")
        self.tabWidget.setObjectName("tabWidget")
        self.program = QtWidgets.QWidget()
        self.program.setObjectName("program")
        self.send = QtWidgets.QPushButton(self.program)
        self.send.setGeometry(QtCore.QRect(10, 10, 120, 30))
        self.send.setStyleSheet("background-color: rgb(181, 131, 90);")
        self.send.setObjectName("send")
        self.message = QtWidgets.QTextEdit(self.program)
        self.message.setGeometry(QtCore.QRect(10, 45, 575, 715))
        self.message.setStyleSheet("background-color: rgb(119, 118, 123);\n"
"background-color: rgb(205, 171, 143);")
        self.message.setObjectName("message")
        self.tabWidget.addTab(self.program, "")
        self.answer = QtWidgets.QWidget()
        self.answer.setObjectName("answer")
        self.result = QtWidgets.QLabel(self.answer)
        self.result.setGeometry(QtCore.QRect(10, 10, 575, 400))
        self.result.setStyleSheet("background-color: rgb(205, 171, 143);")
        self.result.setText("")
        self.chip_player = QMediaPlayer(self.answer)
        chip_video_widget = QVideoWidget(self.answer)
        chip_file_info = QFileInfo("../images/chip_walking.mp4")
        chip_url = QUrl.fromLocalFile(chip_file_info.absoluteFilePath())
        self.chip_player.setMedia(QMediaContent(chip_url))
        self.chip_player.setVideoOutput(chip_video_widget)
        chip_video_widget.setGeometry(QtCore.QRect(10, 420, 575, 323))
        self.result.setObjectName("result")
        self.tabWidget.addTab(self.answer, "")
        self.support = QtWidgets.QWidget()
        self.support.setObjectName("support")
        self.chipi_player = QMediaPlayer(self.support)
        chipi_video_widget = QVideoWidget(self.support)
        chipi_file_info = QFileInfo("../images/chipi.mp4")
        chipi_url = QUrl.fromLocalFile(chipi_file_info.absoluteFilePath())
        self.chipi_player.setMedia(QMediaContent(chipi_url))
        self.chipi_player.setVideoOutput(chipi_video_widget)
        chipi_video_widget.setGeometry(QtCore.QRect(10, 10, 575, 323))
        
        self.tabWidget.currentChanged.connect(self.control_chipi)
        self.tabWidget.currentChanged.connect(self.control_chip)

        self.tabWidget.addTab(self.support, "")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    
    def control_chipi(self, index):
        if (index == 2):
            self.chipi_player.play()
        else:
            self.chipi_player.stop()

    def control_chip(self, index):
        if (index == 1):
            self.chip_player.play()
        else:
            self.chip_player.stop()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.tabWidget.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.send.setText(_translate("MainWindow", "send"))
        self.message.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.program), _translate("MainWindow", "program"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.answer), _translate("MainWindow", "answer"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.support), _translate("MainWindow", "support"))
